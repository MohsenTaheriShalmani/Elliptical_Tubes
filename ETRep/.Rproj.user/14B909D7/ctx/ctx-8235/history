library(shapes)
help(#' ETRep Package: Analysis of Elliptical Tubes Under the Relative Curvature Condition
#'
#' The `ETRep` package provides functions for analyzing elliptical tubes (ETReps), including constructing, transforming, validating, and simulating elliptical tube representations under the Relative Curvature Condition (RCC).
#'
#' @section Main Functions:
#' - `create_Elliptical_Tube`: Constructs a discrete ETRep.
#' - `plot_Elliptical_Tube`: Plots an ETRep.
#' - `check_Tube_Legality`: Validates the ETRep based on the RCC.
#' - `nonIntrinsic_Transformation_Elliptical_Tubes` and `intrinsic_Transformation_Elliptical_Tubes`: Perform transformations between ETReps.
#' - `nonIntrinsic_mean_tube` and `intrinsic_mean_tube`: Calculate the non-intrinsic and intrinsic means of ETReps.
#' - `simulate_etube`: Generates random samples of ETReps based on a reference tube.
#'
#' @docType package
#' @name ETRep
#'
#' @import shapes rgl Morpho matlib RiemBase doBy plotrix Directional RSpincalc rotations SphericalCubature Rvcg fields Matrix pracma truncnorm ggplot2 reshape2 dplyr
NULL)
help(shapes)
help(shapes::procOPA)
help(procOPA)
??shapes
library(ETRep)
numberOfFrames<-15
EulerAngles_alpha<-c(rep(0,numberOfFrames))
EulerAngles_beta<-c(rep(-pi/20,numberOfFrames))
EulerAngles_gamma<-c(rep(0,numberOfFrames))
EulerAngles_Matrix<-cbind(EulerAngles_alpha,EulerAngles_beta,EulerAngles_gamma)
tube <- create_Elliptical_Tube(numberOfFrames = numberOfFrames,
method = "basedOnEulerAngles",
EulerAngles_Matrix = EulerAngles_Matrix,
ellipseResolution = 10,
ellipseRadii_a = rep(3, numberOfFrames),
ellipseRadii_b = rep(2, numberOfFrames),
connectionsLengths = rep(4, numberOfFrames),
plotting = TRUE)
check_Tube_Legality(tube)
help(check_Tube_Legality)
help(check_Tube_Legality)
devtools::document()
help(check_Tube_Legality)
library(ETRep)
devtools::document()
remove.packages("ETRepPackage")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
warnings()
library(Directional)
Directional::eu2
help(eul2rot)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
~/Library/R
R.home()
devtools::document()
devtools::document()
devtools::document()
library(usethis)
use_mit_license(name = "Mohsen Taheri Shalmani")
warnings()
use_mit_license(name = "Mohsen Taheri Shalmani")
use_mit_license(copyright_holder =  "Mohsen Taheri Shalmani")
devtools::document()
